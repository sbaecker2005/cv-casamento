node_modules/
dist/
.DS_Store
*.log
*.sqlite*
.env*
.trash/
data/rsvp.sqlite
coverage/
*.tsbuildinfo
/.vercel
/.netlify
/.output
server/dist/
server/node_modules/
<head>
<meta charset="utf-8"/>
<title>Casamento MonaLisa & Jo√£o - RSVP</title>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@500;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
<style>
:root {
  --grad: linear-gradient(135deg,#ffb7d5,#ff8fb1 30%,#ffcf71 60%,#ffe7c2);
  --dark:#2a2a30;
  --accent:#ff6fa3;
  --accent2:#ffb347;
  --radius:18px;
  --glass:rgba(255,255,255,0.15);
  --glass-border:rgba(255,255,255,0.35);
}
* { box-sizing:border-box; }
body {
  margin:0;
  font-family:'Inter',system-ui,Arial,sans-serif;
  min-height:100vh;
  background:#111;
  color:#222;
  -webkit-font-smoothing:antialiased;
  position:relative;
  overflow-x:hidden;
}
body::before, body::after {
  content:"";
  position:fixed;
  inset:0;
  background:
    radial-gradient(circle at 20% 30%, #ff9ec9 0, transparent 60%),
    radial-gradient(circle at 80% 70%, #ffd486 0, transparent 55%),
    radial-gradient(circle at 70% 20%, #ffb7d5 0, transparent 55%),
    linear-gradient(120deg,#1a1a1f,#101014);
  mix-blend-mode:screen;
  animation: pulse 12s linear infinite;
  opacity:.75;
  z-index:-2;
}
body::after {
  filter:blur(90px) saturate(180%);
  opacity:.55;
  animation-direction:reverse;
}
@keyframes pulse {
  0% { transform:scale(1); }
  50% { transform:scale(1.05); }
  100% { transform:scale(1); }
}
h1,h2 { font-family:'Playfair Display',serif; }
.wrapper {
  max-width:1180px;
  margin:0 auto;
  padding:clamp(1.2rem,2vw,2.5rem);
}
.hero {
  text-align:center;
  padding:4.5rem 1rem 2.5rem;
  backdrop-filter: blur(6px);
}
.badge-date {
  display:inline-block;
  padding:.45rem .9rem;
  font-size:.75rem;
  letter-spacing:.12em;
  font-weight:600;
  text-transform:uppercase;
  background:rgba(255,255,255,.18);
  border:1px solid var(--glass-border);
  color:#fff;
  border-radius:100px;
  backdrop-filter:blur(12px);
  box-shadow:0 4px 25px -6px rgba(255,160,200,.35);
}
.title {
  font-size:clamp(2.6rem,5.2vw,4.6rem);
  line-height:1.05;
  margin:.9rem 0 .6rem;
  background:var(--grad);
  -webkit-background-clip:text;
  color:transparent;
  filter:drop-shadow(0 6px 18px rgba(255,140,180,.35));
}
.subtitle {
  font-size:clamp(1.05rem,1.6vw,1.35rem);
  max-width:760px;
  margin:0 auto 2.4rem;
  color:#f5f6fa;
  font-weight:300;
}
.grid {
  display:grid;
  gap:2.2rem;
  grid-template-columns:repeat(auto-fit,minmax(310px,1fr));
  margin-top:1.5rem;
  align-items:start;
}
.card {
  position:relative;
  background:linear-gradient(160deg,rgba(255,255,255,.22),rgba(255,255,255,.10));
  border:1px solid var(--glass-border);
  padding:1.8rem 1.6rem 2.1rem;
  border-radius:var(--radius);
  overflow:hidden;
  backdrop-filter:blur(14px) saturate(160%);
  box-shadow:0 10px 40px -12px rgba(0,0,0,.55), 0 8px 28px -8px rgba(255,150,190,.35);
  transition:.55s cubic-bezier(.16,.8,.24,1);
}
.card::before {
  content:"";
  position:absolute;
  inset:0;
  background:
    linear-gradient(120deg,rgba(255,255,255,.40),transparent 40%),
    linear-gradient(200deg,rgba(255,200,230,.45),transparent 55%);
  opacity:.35;
  mix-blend-mode:overlay;
  pointer-events:none;
}
.card:hover {
  transform:translateY(-6px) scale(1.012);
  box-shadow:0 16px 50px -10px rgba(0,0,0,.65),0 10px 42px -10px rgba(255,150,190,.55);
}
.card h2 {
  margin:0 0 .9rem;
  font-size:1.55rem;
  color:#fff;
  display:flex;
  align-items:center;
  gap:.55rem;
}
.card p {
  margin:.4rem 0 1.2rem;
  line-height:1.5;
  font-size:.95rem;
  color:#f1f2f6;
}
form .row {
  display:flex;
  gap:.9rem;
  flex-wrap:wrap;
}
label {
  display:flex;
  flex-direction:column;
  gap:.45rem;
  font-size:.78rem;
  letter-spacing:.08em;
  font-weight:600;
  text-transform:uppercase;
  color:#ffeef7;
}
input, select, textarea {
  width:100%;
  background:rgba(255,255,255,.18);
  border:1px solid rgba(255,255,255,.4);
  padding:.85rem .9rem;
  border-radius:11px;
  font:500 0.95rem/1.2 'Inter',sans-serif;
  color:#fff;
  resize:vertical;
  min-height:52px;
  backdrop-filter:blur(6px);
  transition:.35s;
}
input:focus, select:focus, textarea:focus {
  outline:2px solid var(--accent2);
  box-shadow:0 0 0 4px rgba(255,188,120,.35);
}
.actions {
  margin-top:1.2rem;
  display:flex;
  flex-wrap:wrap;
  gap:.9rem;
  align-items:center;
}
button {
  --btn-bg: linear-gradient(90deg,var(--accent),var(--accent2));
  border:0;
  padding:.95rem 1.35rem;
  font-size:.95rem;
  font-weight:600;
  border-radius:14px;
  cursor:pointer;
  color:#1d1d21;
  letter-spacing:.04em;
  position:relative;
  background:var(--btn-bg);
  box-shadow:0 6px 25px -6px rgba(255,150,190,.6), 0 2px 8px -2px rgba(0,0,0,.55);
  transition:.5s;
}
button:hover {
  transform:translateY(-3px);
  box-shadow:0 10px 32px -8px rgba(255,150,190,.75),0 4px 14px -4px rgba(0,0,0,.6);
}
.badge-status {
  font-size:.78rem;
  font-weight:500;
  padding:.55rem .85rem;
  border-radius:100px;
  backdrop-filter:blur(10px);
  background:rgba(255,255,255,.18);
  color:#fff;
  display:inline-flex;
  align-items:center;
  gap:.4rem;
  line-height:1;
}
footer {
  text-align:center;
  padding:3rem 1rem 4rem;
  font-size:.75rem;
  letter-spacing:.06em;
  color:#ddd;
  opacity:.85;
}
.success, .error {
  margin-top:.9rem;
  padding:.75rem 1rem;
  border-radius:12px;
  font-size:.83rem;
  line-height:1.3;
  animation: fadeIn .6s ease;
  background:rgba(255,255,255,.20);
  border:1px solid rgba(255,255,255,.45);
  color:#132;
  font-weight:500;
}
.success {
  background:linear-gradient(145deg,#d3fbd8,#b5f6ff 60%,#ffe6fa);
  color:#093;
}
.error {
  background:linear-gradient(145deg,#ffd9d9,#ffc7c7 60%,#ffe0e0);
  color:#700;
}
@keyframes fadeIn {
  from { opacity:0; transform:translateY(8px); }
  to { opacity:1; transform:translateY(0); }
}
small.helper {
  font-size:.65rem;
  opacity:.75;
  letter-spacing:.06em;
  font-weight:500;
  margin-top:-.25rem;
  display:block;
}
.toggle-presenca {
  display:flex;
  gap:.6rem;
  flex-wrap:wrap;
}
.toggle-presenca label {
  flex:1 1 150px;
  background:rgba(255,255,255,.18);
  border:1px solid rgba(255,255,255,.4);
  border-radius:14px;
  padding:.85rem .9rem;
  cursor:pointer;
  text-align:center;
  transition:.4s;
  font-size:.72rem;
  letter-spacing:.09em;
}
.toggle-presenca input {
  display:none;
}
.toggle-presenca label.active {
  background:linear-gradient(90deg,var(--accent),var(--accent2));
  color:#222;
  box-shadow:0 6px 18px -6px rgba(255,150,190,.7);
}
/* Scrollbar leve */
::-webkit-scrollbar { width:10px; }
::-webkit-scrollbar-track { background:#1a1a1f; }
::-webkit-scrollbar-thumb { background:linear-gradient(#ff9ec9,#ffb347); border-radius:20px; }
</style>
</head>
<body>
  <div class="wrapper">
    <section class="hero">
      <div class="badge-date">24 ‚Ä¢ Agosto ‚Ä¢ 2025</div>
      <h1 class="title">MonaLisa & Jo√£o</h1>
      <p class="subtitle">Celebre conosco um dia de amor, alegria e mem√≥rias inesquec√≠veis. Sua presen√ßa far√° parte da nossa hist√≥ria. Confirme abaixo sua participa√ß√£o.</p>
    </section>

    <section class="grid">
      <div class="card">
        <h2>Confirme sua presen√ßa ‚ú®</h2>
        <p>Preencha o formul√°rio para que possamos organizar tudo com carinho.</p>
        <form id="rsvpForm" novalidate>
          <div class="toggle-presenca" id="presenceToggle">
            <input type="radio" name="attending" id="vai" value="true" checked>
            <label for="vai" data-value="true">Estarei Presente üíí</label>
            <input type="radio" name="attending" id="nao-vai" value="false">
            <label for="nao-vai" data-value="false">N√£o Poderei üò¢</label>
          </div>
          <div class="row" style="margin-top:1.1rem">
            <label style="flex:1 1 100%">
              Nome Completo
              <input required name="name" placeholder="Seu nome"/>
            </label>
            <label style="flex:1 1 60%">
              Email
              <input required type="email" name="email" placeholder="voce@exemplo.com"/>
            </label>
            <label style="flex:1 1 40%">
              Telefone
              <input name="phone" placeholder="(DDD) 90000-0000"/>
            </label>
            <label style="flex:1 1 40%">
              N¬∫ Acompanhantes
              <select name="companions">
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
              </select>
              <small class="helper">Al√©m de voc√™</small>
            </label>
            <label style="flex:1 1 60%">
              Restri√ß√µes Alimentares
              <textarea name="restrictions" placeholder="Ex: vegetariano, sem gl√∫ten..."></textarea>
            </label>
          </div>
          <div class="actions">
            <button type="submit">Enviar Confirma√ß√£o</button>
            <div id="statusArea"></div>
          </div>
        </form>
      </div>

      <div class="card">
        <h2>Detalhes üíç</h2>
        <p><strong>Cerim√¥nia & Recep√ß√£o:</strong><br/> Espa√ßo Flor de Lis, 16h.</p>
        <p><strong>Traje:</strong> Passeio completo. Cores claras e aconchegantes s√£o bem-vindas.</p>
        <p><strong>Dica:</strong> Chegue 30 min antes para aproveitar cada momento.</p>
        <div class="badge-status" id="counterBadge">Carregando contagem...</div>
      </div>
    </section>
  </div>
  <footer>
    Com muito amor ‚Ä¢ MonaLisa & Jo√£o ‚Ä¢ <span id="year"></span>
  </footer>
<script>
document.getElementById('year').textContent = new Date().getFullYear();

const presenceToggle = document.getElementById('presenceToggle');
presenceToggle.addEventListener('click', e => {
  if (e.target.tagName === 'LABEL') {
    [...presenceToggle.querySelectorAll('label')].forEach(l => l.classList.remove('active'));
    e.target.classList.add('active');
    const val = e.target.getAttribute('data-value');
    presenceToggle.querySelectorAll('input').forEach(inp => {
      inp.checked = inp.value === val;
    });
  }
});
presenceToggle.querySelector('label[for="vai"]').classList.add('active');

async function updateCounter() {
  try {
    const r = await fetch('/api/rsvp/stats');
    const j = await r.json();
    const el = document.getElementById('counterBadge');
    if (j?.data) {
      el.textContent = j.data.confirmed + ' presen√ßas confirmadas at√© agora';
    } else {
      el.textContent = 'N√£o foi poss√≠vel carregar';
    }
  } catch {
    document.getElementById('counterBadge').textContent = 'Erro ao carregar';
  }
}
updateCounter();
setInterval(updateCounter, 15000);

const form = document.getElementById('rsvpForm');
form.addEventListener('submit', async (e) => {
  e.preventDefault();
  const fd = new FormData(form);
  const data = Object.fromEntries(fd.entries());
  data.attending = data.attending === 'true';
  data.companions = Number(data.companions || 0);
  const status = document.getElementById('statusArea');
  status.innerHTML = '';
  const btn = form.querySelector('button');
  btn.disabled = true;
  btn.textContent = 'Enviando...';
  try {
    const res = await fetch('/api/rsvp', {
      method:'POST',
      headers:{'Content-Type':'application/json'},
      body: JSON.stringify(data)
    });
    const json = await res.json();
    if (!res.ok) throw json;
    status.innerHTML = '<div class="success">'+ (json.message || 'Confirmado!') +'</div>';
    form.reset();
    node_modules/
    dist/
    .trash/
    data/rsvp.sqlite
    data/rsvp.sqlite-shm
    data/rsvp.sqlite-wal
    .DS_Store
    *.log
    coverage/
    /.env*